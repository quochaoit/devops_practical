name: 'deploy-to-aks'

trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'HaoACRConn'        # Service connection with AKS access
  aksResourceGroup: 'devops-aks'         # Resource group containing your AKS
  aksClusterName: 'devops-aks'           # Your AKS cluster name
  acrName: 'devopacr.azurecr.io'         # Your ACR name
  imageTag: 'latest'                     # Can also be $(Build.BuildId)
  manifestsPath: 'docker-demo/src/manifests'

steps:
# 1. Checkout code
- checkout: self

# 2. Azure CLI login
- task: AzureCLI@2
  displayName: 'Login to Azure and get AKS credentials'
  inputs:
    azureSubscription: '$(azureSubscription)'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "Getting AKS credentials..."
      az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName) --overwrite-existing

# 3. Replace image tags in manifest (optional if using 'latest')
- script: |
    echo "Updating image references in manifests..."
    sed -i "s|devopacr.azurecr.io/backend:.*|devopacr.azurecr.io/backend:$(imageTag)|" $(manifestsPath)/deployment.yaml
    sed -i "s|devopacr.azurecr.io/frontend:.*|devopacr.azurecr.io/frontend:$(imageTag)|" $(manifestsPath)/deployment.yaml
  displayName: 'Update image tags in deployment files'

# 4. Deploy to AKS
- task: Kubernetes@1
  displayName: 'Deploy to AKS'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: '$(azureSubscription)'
    azureResourceGroup: '$(aksResourceGroup)'
    kubernetesCluster: '$(aksClusterName)'
    command: 'apply'
    useConfigurationFile: true
    configuration: '$(manifestsPath)/*.yaml'
